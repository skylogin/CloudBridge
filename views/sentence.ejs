<!-- 상단 메뉴 -->
<% include header.ejs%>
	
	<!-- 메인 -->
	<div class="blog-header">
		<div class="container">
			<ul class="list-group">
				<li class='list-group-item chatPanel'></li>
				<!-- To-do: 말풍선 뷰로 변경 + 날짜/시간을 카톡처럼 좀 작게 변경 -->
			</ul>
		</div>
	</div>
	
	<div class="container">
		<code id="remainUser"></code>
		<span id="chatStatus"></span>
	</div>

	<!-- 하단 -->
	<div class="blog-footer">
		<div class="container">
			<div class="cloudName">
				<input type="text" id="userName" class="form-control input-sm" placeholder="" onkeyup="changeFocus()" maxlength="10" required />
			</div>
			<div class="cloudContent">
				<input type="text" id="userContent" class="form-control input-sm" placeholder="" onkeyup="sendMsg()"  maxlength="500"required />
			</div>
			</ul>
		</div>
	</div>
</div>




<script src="/resource/js/socket.io.js"></script> 
<script src="http://cloudbridge.herokuapp.com/socket.io/socket.io.js"></script>
<script src="/socket.io/socket.io.js"></script> 
<script src="/resource/js/jquery.min.js"></script> 
<script src="/resource/js/bootstrap.min.js"></script>
<script src="/resource/js/constants.js"></script>
<script src="/resource/js/common.js"></script>
<script src="http://jsgetip.appspot.com"></script>

<script type="text/javascript">
	var langFlag = getParameterByName("langFlag");
	var uIp = ip();
	var printTimeCount = 0;

	function setActiveMenu(number){
		$("#menu"+number).addClass("active");
	}

	$(document).ready(function(){
		setLang(langFlag);
		setActiveMenu("3");

		var host = location.origin;
		var PORT = "5000";

		//socket.io 생성
		socket = io.connect(host, {
			port: PORT,
			"transports": ["websocket", "polling","xhr-polling"],
			"force new connection": true
		});

		socket.emit("USER_ENTER", {
			uIp: uIp
		});

		socket.on("USER_ADD", function(data){
			modifyUserCount(data.newUserCount);
			commonMessage(data, 0);
			flashWindow(data.newNick, 2000);
		});

		socket.on("MSG_ADD", function(data){
			createMessage(data, 1);
			flashWindow(data.newNick, 2000);
		});

		socket.on("DISCONNECTED", function(data) {
			modifyUserCount(data.newUserCount);
			commonMessage(data, 1);
			flashWindow(data.newNick, 2000);
        });

	});


	function modifyUserCount(count){
		$("#remainUser").html(count);
	}

	function commonMessage(data, flag){
		var newUserName = data.newNick;
		var newUserTime = data.newTime;

		if(typeof newUserName == "undefined"){
			var li;
			if(flag == 0){
				li = $("<code>" + CONSTANT.getValue("chatMessage1", langFlag) +"</code>" + whiteSpace + "(" + newUserTime + ")<br/>");
			} else if(flag == 1){
				li = $("<code>" + CONSTANT.getValue("chatMessage2", langFlag) +"</code>" + whiteSpace + "(" + newUserTime + ")<br/>");
			}
			
			addMessage(li);
		}
	}

	function createMessage(data, count){
		var newUserName = data.newNick;
		var newUserMsg = data.newMsg;
		var newUserTime = data.newTime;
		printTimeCount += count;
		var li;

		if(printTimeCount > 5){
			printTimeCount = 0;
			li = $("<code>" + newUserName + "</code> " + newUserMsg + whiteSpace + "(" + newUserTime + ")<br/>");
		} else{
			li = $("<code>" + newUserName + "</code> " + newUserMsg + "<br/>");
		}

		addMessage(li);
	}

	/* 메시지를 붙여줌 */
	function addMessage(li){
		$(".list-group-item").append(li);

		/* 스크롤 */
		$(".list-group-item").scrollTop($(".list-group-item")[0].scrollHeight);
	}



	function sendMsg(flag) {
		if($("#userName").val() == ""){
			$("#userName").focus();
		}
		if(event.keyCode == 13 || flag == true){
			var userName = $("#userName").val();
			var userContent = $("#userContent").val();

			if(userName == '' || userName == null || userContent == '' || userContent == null){ return false; }

			$("#userContent").val("");

			socket.emit("CHAT_MSG", {
				nick: userName,
				msg: userContent,
				uIP: uIp
			});
		}
	}

	function changeFocus(){
		if(event.keyCode == 13){
			$("#userContent").focus();
			sendMsg(true);
		}
	}
</script>
</body>
</html>